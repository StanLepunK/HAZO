!function(t){var n={};function e(i){if(n[i])return n[i].exports;var r=n[i]={i:i,l:!1,exports:{}};return t[i].call(r.exports,r,r.exports,e),r.l=!0,r.exports}e.m=t,e.c=n,e.d=function(t,n,i){e.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:i})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,n){if(1&n&&(t=e(t)),8&n)return t;if(4&n&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(e.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&n&&"string"!=typeof t)for(var r in t)e.d(i,r,function(n){return t[n]}.bind(null,r));return i},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},e.p="",e(e.s=1)}([,function(t,n,e){"use strict";e.r(n);var i,r=function(){function t(){}return t.prototype.set_x=function(t){this.x_=t},t.prototype.set_y=function(t){this.y_=t},t.prototype.set_z=function(t){this.z_=t},t.prototype.set_w=function(t){this.w_=t},t.prototype.x=function(){return this.x_},t.prototype.y=function(){return this.y_},t.prototype.z=function(){return this.z_},t.prototype.w=function(){return this.w_},t.prototype.red=function(){return this.x_},t.prototype.gre=function(){return this.y_},t.prototype.blu=function(){return this.z_},t.prototype.hue=function(){return this.x_},t.prototype.sat=function(){return this.y_},t.prototype.bri=function(){return this.z_},t.prototype.alp=function(){return this.w_},t.prototype.mult=function(){for(var t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];1==t.length?(this.x_*=t[0],this.y_*=t[0],this.z_*=t[0],this.w_*=t[0]):2==t.length?(this.x_*=t[0],this.y_*=t[1]):3==t.length?(this.x_*=t[0],this.y_*=t[1],this.z_*=t[2]):4==t.length&&(this.x_*=t[0],this.y_*=t[1],this.z_*=t[2],this.w_*=t[3]),this.set_x(this.x_),this.set_y(this.y_),this.set_z(this.z_),this.set_w(this.w_)},t.prototype.div=function(){for(var t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];1==t.length?(this.x_/=t[0],this.y_/=t[0],this.z_/=t[0],this.w_/=t[0]):2==t.length?(this.x_/=t[0],this.y_/=t[1]):3==t.length?(this.x_/=t[0],this.y_/=t[1],this.z_/=t[2]):4==t.length&&(this.x_/=t[0],this.y_/=t[1],this.z_/=t[2],this.w_/=t[3]),this.set_x(this.x_),this.set_y(this.y_),this.set_z(this.z_),this.set_w(this.w_)},t.prototype.add=function(){for(var t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];1==t.length?(this.x_+=t[0],this.y_+=t[0],this.z_+=t[0],this.w_+=t[0]):2==t.length?(this.x_+=t[0],this.y_+=t[1]):3==t.length?(this.x_+=t[0],this.y_+=t[1],this.z_+=t[2]):4==t.length&&(this.x_+=t[0],this.y_+=t[1],this.z_+=t[2],this.w_+=t[3]),this.set_x(this.x_),this.set_y(this.y_),this.set_z(this.z_),this.set_w(this.w_)},t.prototype.sub=function(){for(var t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];1==t.length?(this.x_-=t[0],this.y_-=t[0],this.z_-=t[0],this.w_-=t[0]):2==t.length?(this.x_-=t[0],this.y_-=t[1]):3==t.length?(this.x_-=t[0],this.y_-=t[1],this.z_-=t[2]):4==t.length&&(this.x_-=t[0],this.y_-=t[1],this.z_-=t[2],this.w_-=t[3]),this.set_x(this.x_),this.set_y(this.y_),this.set_z(this.z_),this.set_w(this.w_)},t.prototype.xy=function(){var n=new t;return n.set_x(this.x_),n.set_y(this.y_),n},t.prototype.xyz=function(){var n=new t;return n.set_x(this.x_),n.set_y(this.y_),n.set_z(this.z_),n},t.prototype.xyzw=function(){var n=new t;return n.set_x(this.x_),n.set_y(this.y_),n.set_z(this.z_),n.set_w(this.w_),n},t}(),o=(i=function(t,n){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)n.hasOwnProperty(e)&&(t[e]=n[e])})(t,n)},function(t,n){function e(){this.constructor=t}i(t,n),t.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)}),s=function(t){function n(n,e,i){var r=t.call(this)||this;if(e>i)throw new Error(n+" input is "+e+" and the max is "+i+" this results in an invalid entry");return r}return o(n,t),n}(Error),h=function(){var t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)n.hasOwnProperty(e)&&(t[e]=n[e])})(n,e)};return function(n,e){function i(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)}}(),_=function(t){function n(n,e){for(var i=[],r=2;r<arguments.length;r++)i[r-2]=arguments[r];t.call(this);throw new Error(n+" input is "+e+" is unauthorized, this results in an invalid entry")}return h(n,t),n}(Error),u=function(){var t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)n.hasOwnProperty(e)&&(t[e]=n[e])})(n,e)};return function(n,e){function i(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)}}(),c=function(t){function n(){for(var n=[],e=0;e<arguments.length;e++)n[e]=arguments[e];var i=t.call(this)||this;return 1==n.length?(i.x_=n[0],i.y_=n[0],i.z_=n[0],i.w_=n[0]):4==n.length?(i.x_=n[0],i.y_=n[1],i.z_=n[2],i.w_=n[3]):n.length>4?new s("class vec4 constructor() need 1 or 4 arguments",n.length,4):new _("class vec4 constructor() need 1 or 4 arguments",n.length),i}return u(n,t),n.prototype.set=function(){for(var n=[],e=0;e<arguments.length;e++)n[e]=arguments[e];1==n.length?(this.x_=n[0],this.y_=n[0],this.z_=n[0],this.w_=n[0]):4==n.length?(this.x_=n[0],this.y_=n[1],this.z_=n[2],this.w_=n[3]):n.length>4?new s("class vec4 method set() need 1 or 4 arguments",n.length,4):new _("class vec3 constructor() need 1 or 4 arguments",n.length),t.prototype.set_x.call(this,this.x_),t.prototype.set_y.call(this,this.y_),t.prototype.set_z.call(this,this.z_),t.prototype.set_z.call(this,this.w_)},n}(r),p=(new p5(function(t){t.preload=function(){},t.setup=function(){p=t.windowWidth,y=t.windowHeight,t.createCanvas(p,y,t.WEBGL),t.colorMode(t.HSB,1,1,1,1),f.set_x(l(t))},t.draw=function(){!function(t,n){t.background(n.x(),n.y(),n.z(),n.w())}(t,f),t.fill(0,0,0,1),t.rect(t.mouseX-p/2,t.mouseY-y/2,50,50),t.textSize(50),t.text("trucbidule",t.mouseX-p/2,t.mouseY-y/2)},t.windowResized=function(){p=t.windowWidth,y=t.windowHeight,t.createCanvas(p,y,t.WEBGL)},t.mousePressed=function(){f.set_x(l(t))}}),0),y=0,f=new c(1);function l(t){return t.random(1)}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,