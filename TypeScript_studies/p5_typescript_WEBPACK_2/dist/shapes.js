!function(r){var e={};function n(t){if(e[t])return e[t].exports;var o=e[t]={i:t,l:!1,exports:{}};return r[t].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=r,n.c=e,n.d=function(r,e,t){n.o(r,e)||Object.defineProperty(r,e,{enumerable:!0,get:t})},n.r=function(r){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(r,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(r,"__esModule",{value:!0})},n.t=function(r,e){if(1&e&&(r=n(r)),8&e)return r;if(4&e&&"object"==typeof r&&r&&r.__esModule)return r;var t=Object.create(null);if(n.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:r}),2&e&&"string"!=typeof r)for(var o in r)n.d(t,o,function(e){return r[e]}.bind(null,o));return t},n.n=function(r){var e=r&&r.__esModule?function(){return r.default}:function(){return r};return n.d(e,"a",e),e},n.o=function(r,e){return Object.prototype.hasOwnProperty.call(r,e)},n.p="",n(n.s=1)}([,function(r,e){!function(){function r(){}r.circle=function(r,e){for(var n=new Array,t=0;t<360;t+=9){var o=p5.Vector.fromAngle(r.radians(t-135));o.mult(e),n.push(o)}return n},r.square=function(r,e){for(var n=new Array,t=-e;t<e;t+=10)n.push(new p5.Vector(t,-e));for(var o=-e;o<e;o+=10)n.push(new p5.Vector(e,o));for(t=e;t>-e;t-=10)n.push(new p5.Vector(t,e));for(o=e;o>-e;o-=10)n.push(new p5.Vector(-e,o));return n},r.star=function(r,e,n,t,o,u){for(var c=r.TWO_PI/u,f=c/2,i=new Array,a=0;a<r.TWO_PI;a+=c){var p=e+r.cos(a)*o,l=n+r.sin(a)*o;i.push(new p5.Vector(p,l)),p=e+r.cos(a+f)*t,l=n+r.sin(a+f)*t,i.push(new p5.Vector(p,l))}return i}}()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,